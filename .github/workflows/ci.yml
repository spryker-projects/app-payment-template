name: CI

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    validation:
        name: "CS, ArchSniffer, PHPStan, Security"
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - '8.1'

        env:
            APPLICATION_ENV: ci
            APPLICATION_STORE: GLOBAL

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    extensions: mbstring, intl, pdo_mysql

            -   name: Composer get cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Composer cache
                uses: actions/cache@v3
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-composer-

            -   name: Composer validate
                run: composer validate

            -   name: Composer version
                run: composer --version

            -   name: Composer Install
                run: composer install --no-interaction -o

            -   name: Generate transfer objects
                run: vendor/bin/console transfer:generate

            -   name: Generate transfer databuilder objects
                run: vendor/bin/console transfer:databuilder:generate

            -   name: Propel install
                run: |
                    vendor/bin/console propel:schema:copy
                    vendor/bin/console propel:model:build
                    vendor/bin/console transfer:entity:generate

            -   name: Codecept build
                run: vendor/bin/codecept build --ansi

            -   name: Generate autocompletion files
                run: vendor/bin/console dev:ide-auto-completion:generate

            -   name: Generate rest API dcoumentation
                run: vendor/bin/console rest-api:generate:documentation

            -   name: Validate propel files
                run: |
                    vendor/bin/console propel:schema:validate
                    vendor/bin/console propel:schema:validate-xml-names

            -   name: Validate transfer files
                run: vendor/bin/console transfer:validate

            -   name: Run Rector checks
                run: composer rector-ci

            -   name: Run CodeStyle checks
                run: vendor/bin/phpcs -p

            -   name: Run Architecture rules
                run: vendor/bin/phpmd src/App text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2

            -   name: Run PHPStan
                run: vendor/bin/phpstan analyze -l 5 -c phpstan.neon src/App --debug

            -   name: Run Security check
                run: vendor/bin/console security:check

    mariadb-alpine:
        name: "MariaDB / Alpine"
        strategy:
            matrix:
                php-version:
                    - '8.1'

        runs-on: ubuntu-22.04
        env:
            PROGRESS_TYPE: plain
            PHP_VERSION: ${{ matrix.php-version }}
            TRAVIS: 1

        steps:
            -   uses: actions/checkout@v3

            -   name: Install apt-packages
                run: |
                    sudo apt-get install apache2-utils

            # we don't want this package on production
            -   name: Add dummy oauth provider
                run: |
                    composer require --no-interaction --update-no-dev spryker/oauth-dummy

            -   name: Install docker-compose
                run: |
                    sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    sudo chmod +x /usr/local/bin/docker-compose

            -   name: Run docker
                run: |
                    git clone https://github.com/spryker/docker-sdk.git ./docker
                    docker/sdk boot deploy.ci.yml -v
                    docker/sdk up -t -v --data --build
                    docker/sdk testing codecept run -c codeception.yml --coverage-xml

            -   name: Code Coverage Report
                if: success()
                uses: codecov/codecov-action@v3
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    file: ./tests/_output/coverage.xml
                    flags: php-${{ matrix.php-version }}
